// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesTicket.Infrastructure;

#nullable disable

namespace MoviesTicket.Infrastructure.Migrations
{
    [DbContext(typeof(MoviesTicketDbContext))]
    [Migration("20241005020919_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("eventseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("movieseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("reservationseq", "dbo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("showtimeseq")
                .IncrementsBy(10);

            modelBuilder.Entity("MoviesTicket.Domain.Aggregates.Root.EventLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "eventseq");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("EventLogs", (string)null);
                });

            modelBuilder.Entity("MoviesTicket.Domain.Aggregates.Root.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "movieseq");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MovieGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Runtime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Synopsis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MovieGUID")
                        .IsUnique();

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("MoviesTicket.Domain.Aggregates.Root.EventLogs", b =>
                {
                    b.OwnsOne("MoviesTicket.Domain.Aggregates.Enumerations.EventType", "EventType", b1 =>
                        {
                            b1.Property<int>("EventLogsId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EventLogsId");

                            b1.ToTable("EventLogs");

                            b1.WithOwner()
                                .HasForeignKey("EventLogsId");
                        });

                    b.Navigation("EventType")
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesTicket.Domain.Aggregates.Root.Movies", b =>
                {
                    b.OwnsMany("MoviesTicket.Domain.Aggregates.Entities.ShowsTime", "ShowsTimes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseHiLo(b1.Property<int>("Id"), "showtimeseq");

                            b1.Property<bool>("IsDeleted")
                                .HasColumnType("bit");

                            b1.Property<int>("MovieId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("ShowDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("ShowsTimeGUID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Time")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("Id");

                            b1.HasIndex("MovieId");

                            b1.HasIndex("ShowsTimeGUID")
                                .IsUnique();

                            b1.ToTable("ShowsTime", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MovieId");

                            b1.OwnsMany("MoviesTicket.Domain.Aggregates.ValueObjects.Reservation", "Reservation", b2 =>
                                {
                                    b2.Property<int>("ReservationId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseHiLo(b2.Property<int>("ReservationId"), "reservationseq", "dbo");

                                    b2.Property<string>("Email")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<int>("ShowsTimeGUID")
                                        .HasColumnType("int");

                                    b2.HasKey("ReservationId");

                                    b2.HasIndex("ShowsTimeGUID");

                                    b2.ToTable("ShowsTime_Reservation", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ShowsTimeGUID");
                                });

                            b1.Navigation("Reservation");
                        });

                    b.OwnsOne("MoviesTicket.Domain.Aggregates.Enumerations.MovieGenres", "Genres", b1 =>
                        {
                            b1.Property<int>("MoviesId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MoviesId");

                            b1.ToTable("Movies");

                            b1.WithOwner()
                                .HasForeignKey("MoviesId");
                        });

                    b.Navigation("Genres")
                        .IsRequired();

                    b.Navigation("ShowsTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
